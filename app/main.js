"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// this import should be first in order to load some required settings (like globals and reflect-metadata)
var platform_1 = require("nativescript-angular/platform");
var app_module_1 = require("./app.module");
var application = require("tns-core-modules/application");
var traceModule = require("tns-core-modules/trace");
var errorHandler = {
    handlerError: function (err) {
        //option 1 (development) - throw the error
        // throw err;
        alert('error :' + err);
        //option 2 (development) - logging the error via write method provided from trace module
        traceModule.write(err, 'unhandled-error', traceModule.messageType.error);
        //(production) - custom functionality for error handling
        //reportToAnalytics(err)
    }
};
traceModule.setErrorHandler(errorHandler);
// application.run({ moduleName: 'AppModule' });
application.on('discardedErrorEvent', function (args) {
    var error = args.error;
    alert(error);
    console.log('Received discarded exception:');
    console.log(error.message);
    console.log(error.stackTrace);
    console.log(error.nativeException);
    //report the exception in your analytics solution here
});
platform_1.platformNativeScriptDynamic().bootstrapModule(app_module_1.AppModule);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1haW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwwR0FBMEc7QUFDMUcsMERBQTJFO0FBRTNFLDJDQUF3QztBQUN4QywwREFBMkQ7QUFDM0Qsb0RBQW9EO0FBQ3BELElBQU0sWUFBWSxHQUE2QjtJQUMzQyxZQUFZLFlBQUMsR0FBRztRQUNaLDBDQUEwQztRQUMxQyxhQUFhO1FBQ2IsS0FBSyxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUMsQ0FBQztRQUN2Qix3RkFBd0Y7UUFDeEYsV0FBVyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUMsaUJBQWlCLEVBQUUsV0FBVyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUV4RSx3REFBd0Q7UUFDeEQsd0JBQXdCO0lBQzVCLENBQUM7Q0FDSixDQUFBO0FBRUQsV0FBVyxDQUFDLGVBQWUsQ0FBQyxZQUFZLENBQUMsQ0FBQTtBQUN6QyxnREFBZ0Q7QUFDaEQsV0FBVyxDQUFDLEVBQUUsQ0FBQyxxQkFBcUIsRUFBRSxVQUFVLElBQUk7SUFDaEQsSUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN6QixLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDYixPQUFPLENBQUMsR0FBRyxDQUFDLCtCQUErQixDQUFDLENBQUM7SUFDN0MsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDM0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDOUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDbkMsc0RBQXNEO0FBQzFELENBQUMsQ0FBQyxDQUFDO0FBQ0gsc0NBQTJCLEVBQUUsQ0FBQyxlQUFlLENBQUMsc0JBQVMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdGhpcyBpbXBvcnQgc2hvdWxkIGJlIGZpcnN0IGluIG9yZGVyIHRvIGxvYWQgc29tZSByZXF1aXJlZCBzZXR0aW5ncyAobGlrZSBnbG9iYWxzIGFuZCByZWZsZWN0LW1ldGFkYXRhKVxuaW1wb3J0IHsgcGxhdGZvcm1OYXRpdmVTY3JpcHREeW5hbWljIH0gZnJvbSduYXRpdmVzY3JpcHQtYW5ndWxhci9wbGF0Zm9ybSc7XG5cbmltcG9ydCB7IEFwcE1vZHVsZSB9IGZyb20nLi9hcHAubW9kdWxlJztcbmltcG9ydCAqIGFzIGFwcGxpY2F0aW9uIGZyb20ndG5zLWNvcmUtbW9kdWxlcy9hcHBsaWNhdGlvbic7XG5pbXBvcnQgKiBhcyB0cmFjZU1vZHVsZSBmcm9tJ3Rucy1jb3JlLW1vZHVsZXMvdHJhY2UnXG5jb25zdCBlcnJvckhhbmRsZXI6IHRyYWNlTW9kdWxlLkVycm9ySGFuZGxlciA9IHtcbiAgICBoYW5kbGVyRXJyb3IoZXJyKSB7XG4gICAgICAgIC8vb3B0aW9uIDEgKGRldmVsb3BtZW50KSAtIHRocm93IHRoZSBlcnJvclxuICAgICAgICAvLyB0aHJvdyBlcnI7XG4gICAgICAgIGFsZXJ0KCdlcnJvciA6JyArIGVycik7XG4gICAgICAgIC8vb3B0aW9uIDIgKGRldmVsb3BtZW50KSAtIGxvZ2dpbmcgdGhlIGVycm9yIHZpYSB3cml0ZSBtZXRob2QgcHJvdmlkZWQgZnJvbSB0cmFjZSBtb2R1bGVcbiAgICAgICAgdHJhY2VNb2R1bGUud3JpdGUoZXJyLCd1bmhhbmRsZWQtZXJyb3InLCB0cmFjZU1vZHVsZS5tZXNzYWdlVHlwZS5lcnJvcik7XG5cbiAgICAgICAgLy8ocHJvZHVjdGlvbikgLSBjdXN0b20gZnVuY3Rpb25hbGl0eSBmb3IgZXJyb3IgaGFuZGxpbmdcbiAgICAgICAgLy9yZXBvcnRUb0FuYWx5dGljcyhlcnIpXG4gICAgfVxufVxuXG50cmFjZU1vZHVsZS5zZXRFcnJvckhhbmRsZXIoZXJyb3JIYW5kbGVyKVxuLy8gYXBwbGljYXRpb24ucnVuKHsgbW9kdWxlTmFtZTogJ0FwcE1vZHVsZScgfSk7XG5hcHBsaWNhdGlvbi5vbignZGlzY2FyZGVkRXJyb3JFdmVudCcsIGZ1bmN0aW9uIChhcmdzKSB7XG4gICAgY29uc3QgZXJyb3IgPSBhcmdzLmVycm9yO1xuICAgIGFsZXJ0KGVycm9yKTtcbiAgICBjb25zb2xlLmxvZygnUmVjZWl2ZWQgZGlzY2FyZGVkIGV4Y2VwdGlvbjonKTtcbiAgICBjb25zb2xlLmxvZyhlcnJvci5tZXNzYWdlKTtcbiAgICBjb25zb2xlLmxvZyhlcnJvci5zdGFja1RyYWNlKTtcbiAgICBjb25zb2xlLmxvZyhlcnJvci5uYXRpdmVFeGNlcHRpb24pO1xuICAgIC8vcmVwb3J0IHRoZSBleGNlcHRpb24gaW4geW91ciBhbmFseXRpY3Mgc29sdXRpb24gaGVyZVxufSk7XG5wbGF0Zm9ybU5hdGl2ZVNjcmlwdER5bmFtaWMoKS5ib290c3RyYXBNb2R1bGUoQXBwTW9kdWxlKTtcbiJdfQ==