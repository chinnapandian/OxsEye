"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// this import should be first in order to load some required settings (like globals and reflect-metadata)
var platform_1 = require("nativescript-angular/platform");
var app_module_1 = require("./app.module");
var application = require("tns-core-modules/application");
var traceModule = require("tns-core-modules/trace");
/**
 * Error handler variable to handle error across system.
 */
var errorHandler = {
    handlerError: function (err) {
        //option 1 (development) - throw the error
        // throw err;
        alert('error :' + err);
        //option 2 (development) - logging the error via write method provided from trace module
        traceModule.write(err, 'unhandled-error', traceModule.messageType.error);
        //(production) - custom functionality for error handling
        //reportToAnalytics(err)
    }
};
traceModule.setErrorHandler(errorHandler);
// application.run({ moduleName: 'AppModule' });
application.on('discardedErrorEvent', function (args) {
    var error = args.error;
    alert(error);
    console.log('Received discarded exception:');
    console.log(error.message);
    console.log(error.stackTrace);
    console.log(error.nativeException);
    //report the exception in your analytics solution here
});
platform_1.platformNativeScriptDynamic().bootstrapModule(app_module_1.AppModule);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1haW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwwR0FBMEc7QUFDMUcsMERBQTJFO0FBRTNFLDJDQUF3QztBQUN4QywwREFBMkQ7QUFDM0Qsb0RBQXFEO0FBQ3JEOztHQUVHO0FBQ0gsSUFBTSxZQUFZLEdBQTZCO0lBQzNDLFlBQVksWUFBQyxHQUFHO1FBQ1osMENBQTBDO1FBQzFDLGFBQWE7UUFDYixLQUFLLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZCLHdGQUF3RjtRQUN4RixXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBQyxpQkFBaUIsRUFBRSxXQUFXLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRXhFLHdEQUF3RDtRQUN4RCx3QkFBd0I7SUFDNUIsQ0FBQztDQUNKLENBQUE7QUFFRCxXQUFXLENBQUMsZUFBZSxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQzFDLGdEQUFnRDtBQUNoRCxXQUFXLENBQUMsRUFBRSxDQUFDLHFCQUFxQixFQUFFLFVBQVUsSUFBSTtJQUNoRCxJQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3pCLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNiLE9BQU8sQ0FBQyxHQUFHLENBQUMsK0JBQStCLENBQUMsQ0FBQztJQUM3QyxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMzQixPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUM5QixPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUNuQyxzREFBc0Q7QUFDMUQsQ0FBQyxDQUFDLENBQUM7QUFDSCxzQ0FBMkIsRUFBRSxDQUFDLGVBQWUsQ0FBQyxzQkFBUyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0aGlzIGltcG9ydCBzaG91bGQgYmUgZmlyc3QgaW4gb3JkZXIgdG8gbG9hZCBzb21lIHJlcXVpcmVkIHNldHRpbmdzIChsaWtlIGdsb2JhbHMgYW5kIHJlZmxlY3QtbWV0YWRhdGEpXG5pbXBvcnQgeyBwbGF0Zm9ybU5hdGl2ZVNjcmlwdER5bmFtaWMgfSBmcm9tJ25hdGl2ZXNjcmlwdC1hbmd1bGFyL3BsYXRmb3JtJztcblxuaW1wb3J0IHsgQXBwTW9kdWxlIH0gZnJvbScuL2FwcC5tb2R1bGUnO1xuaW1wb3J0ICogYXMgYXBwbGljYXRpb24gZnJvbSd0bnMtY29yZS1tb2R1bGVzL2FwcGxpY2F0aW9uJztcbmltcG9ydCAqIGFzIHRyYWNlTW9kdWxlIGZyb20ndG5zLWNvcmUtbW9kdWxlcy90cmFjZSc7XG4vKipcbiAqIEVycm9yIGhhbmRsZXIgdmFyaWFibGUgdG8gaGFuZGxlIGVycm9yIGFjcm9zcyBzeXN0ZW0uXG4gKi9cbmNvbnN0IGVycm9ySGFuZGxlcjogdHJhY2VNb2R1bGUuRXJyb3JIYW5kbGVyID0ge1xuICAgIGhhbmRsZXJFcnJvcihlcnIpIHtcbiAgICAgICAgLy9vcHRpb24gMSAoZGV2ZWxvcG1lbnQpIC0gdGhyb3cgdGhlIGVycm9yXG4gICAgICAgIC8vIHRocm93IGVycjtcbiAgICAgICAgYWxlcnQoJ2Vycm9yIDonICsgZXJyKTtcbiAgICAgICAgLy9vcHRpb24gMiAoZGV2ZWxvcG1lbnQpIC0gbG9nZ2luZyB0aGUgZXJyb3IgdmlhIHdyaXRlIG1ldGhvZCBwcm92aWRlZCBmcm9tIHRyYWNlIG1vZHVsZVxuICAgICAgICB0cmFjZU1vZHVsZS53cml0ZShlcnIsJ3VuaGFuZGxlZC1lcnJvcicsIHRyYWNlTW9kdWxlLm1lc3NhZ2VUeXBlLmVycm9yKTtcblxuICAgICAgICAvLyhwcm9kdWN0aW9uKSAtIGN1c3RvbSBmdW5jdGlvbmFsaXR5IGZvciBlcnJvciBoYW5kbGluZ1xuICAgICAgICAvL3JlcG9ydFRvQW5hbHl0aWNzKGVycilcbiAgICB9XG59XG5cbnRyYWNlTW9kdWxlLnNldEVycm9ySGFuZGxlcihlcnJvckhhbmRsZXIpO1xuLy8gYXBwbGljYXRpb24ucnVuKHsgbW9kdWxlTmFtZTogJ0FwcE1vZHVsZScgfSk7XG5hcHBsaWNhdGlvbi5vbignZGlzY2FyZGVkRXJyb3JFdmVudCcsIGZ1bmN0aW9uIChhcmdzKSB7XG4gICAgY29uc3QgZXJyb3IgPSBhcmdzLmVycm9yO1xuICAgIGFsZXJ0KGVycm9yKTtcbiAgICBjb25zb2xlLmxvZygnUmVjZWl2ZWQgZGlzY2FyZGVkIGV4Y2VwdGlvbjonKTtcbiAgICBjb25zb2xlLmxvZyhlcnJvci5tZXNzYWdlKTtcbiAgICBjb25zb2xlLmxvZyhlcnJvci5zdGFja1RyYWNlKTtcbiAgICBjb25zb2xlLmxvZyhlcnJvci5uYXRpdmVFeGNlcHRpb24pO1xuICAgIC8vcmVwb3J0IHRoZSBleGNlcHRpb24gaW4geW91ciBhbmFseXRpY3Mgc29sdXRpb24gaGVyZVxufSk7XG5wbGF0Zm9ybU5hdGl2ZVNjcmlwdER5bmFtaWMoKS5ib290c3RyYXBNb2R1bGUoQXBwTW9kdWxlKTtcbiJdfQ==