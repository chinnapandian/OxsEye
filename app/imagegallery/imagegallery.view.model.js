"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BitmapFactory = require("nativescript-bitmap-factory");
var observable_1 = require("data/observable");
var KnownColors = require("color/known-colors");
function createViewModel() {
    var viewModel = new observable_1.Observable();
    var bmp = BitmapFactory.create(300);
    bmp.dispose(function (b) {
        try {
            /* b.drawRect({ x: 150, y: 150 },
                   '300x150',
                   KnownColors.Red, KnownColors.Black); */
            /* for (var i = 0; i < b.width; i++) {
    b.setPoint({ x: i, y: 150 },
                    KnownColors.Red);
            } */
            b.drawOval("300,150", "0,75", KnownColors.Red, KnownColors.Black);
            b.drawCircle(80, null, KnownColors.DarkGreen);
            b.setPoint("160,150", KnownColors.Yellow);
            b.drawLine("0,150", "300,75", KnownColors.Blue);
            // b.drawRect("150,150", "30x20", KnownColors.White);
            // var p = b.getPoint({ x: 150, y: 150 });
            // console.log("Point: " + [p.a, p.r, p.g, p.b]);
            b.writeText("This is a test! " + '\uf087', "100,100", {
                color: KnownColors.Yellow,
                size: 10,
                name: 'fontawesome-webfont',
            });
            var b2 = b.clone().resize("20x20");
            b.insert(b2, "25,25");
            viewModel.set('image', b.rotate(-37).toDataUrl());
            console.log(b.rotate(-37).toDataUrl());
        }
        catch (e) {
            console.log('ERROR: ' + e);
        }
    });
    console.log("Bitmap disposed!");
    console.log("Bitmap.isDisposed: " + bmp.isDisposed);
    return viewModel;
}
exports.createViewModel = createViewModel;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2VnYWxsZXJ5LnZpZXcubW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbWFnZWdhbGxlcnkudmlldy5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDJEQUE4RDtBQUM5RCw4Q0FBMkM7QUFDM0MsZ0RBQW1EO0FBS25EO0lBQ0ksSUFBSSxTQUFTLEdBQVEsSUFBSSx1QkFBVSxFQUFFLENBQUM7SUFFdEMsSUFBSSxHQUFHLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUVwQyxHQUFHLENBQUMsT0FBTyxDQUFDLFVBQUMsQ0FBQztRQUNWLElBQUksQ0FBQztZQUNEOzswREFFOEM7WUFFOUM7OztnQkFHSTtZQUdKLENBQUMsQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxXQUFXLENBQUMsR0FBRyxFQUFFLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNsRSxDQUFDLENBQUMsVUFBVSxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBRTlDLENBQUMsQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUUxQyxDQUFDLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBRWhELHFEQUFxRDtZQUVyRCwwQ0FBMEM7WUFDMUMsaURBQWlEO1lBRWpELENBQUMsQ0FBQyxTQUFTLENBQUMsa0JBQWtCLEdBQUcsUUFBUSxFQUFFLFNBQVMsRUFBRTtnQkFDbEQsS0FBSyxFQUFFLFdBQVcsQ0FBQyxNQUFNO2dCQUN6QixJQUFJLEVBQUUsRUFBRTtnQkFDUixJQUFJLEVBQUUscUJBQXFCO2FBQzlCLENBQUMsQ0FBQztZQUVILElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDbkMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7WUFFdEIsU0FBUyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUM7WUFDbEQsT0FBTyxDQUFDLEdBQUcsQ0FBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQztRQUM1QyxDQUFDO1FBQ0QsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNQLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQy9CLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUNoQyxPQUFPLENBQUMsR0FBRyxDQUFDLHFCQUFxQixHQUFHLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUVwRCxNQUFNLENBQUMsU0FBUyxDQUFDO0FBQ3JCLENBQUM7QUFsREQsMENBa0RDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJpdG1hcEZhY3RvcnkgPSByZXF1aXJlKFwibmF0aXZlc2NyaXB0LWJpdG1hcC1mYWN0b3J5XCIpO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tIFwiZGF0YS9vYnNlcnZhYmxlXCI7XG5pbXBvcnQgS25vd25Db2xvcnMgPSByZXF1aXJlKFwiY29sb3Iva25vd24tY29sb3JzXCIpO1xuaW1wb3J0IEltYWdlU291cmNlID0gcmVxdWlyZSgnaW1hZ2Utc291cmNlJyk7XG5pbXBvcnQgSW1hZ2UgPSByZXF1aXJlKCd1aS9pbWFnZScpO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVWaWV3TW9kZWwoKSB7XG4gICAgdmFyIHZpZXdNb2RlbDogYW55ID0gbmV3IE9ic2VydmFibGUoKTtcblxuICAgIHZhciBibXAgPSBCaXRtYXBGYWN0b3J5LmNyZWF0ZSgzMDApO1xuICAgIFxuICAgIGJtcC5kaXNwb3NlKChiKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvKiBiLmRyYXdSZWN0KHsgeDogMTUwLCB5OiAxNTAgfSxcbiAgICAgICAgICAgICAgICAgICAnMzAweDE1MCcsXG4gICAgICAgICAgICAgICAgICAgS25vd25Db2xvcnMuUmVkLCBLbm93bkNvbG9ycy5CbGFjayk7ICovXG5cbiAgICAgICAgICAgIC8qIGZvciAodmFyIGkgPSAwOyBpIDwgYi53aWR0aDsgaSsrKSB7XG4gICAgYi5zZXRQb2ludCh7IHg6IGksIHk6IDE1MCB9LFxuICAgICAgICAgICAgICAgICAgICBLbm93bkNvbG9ycy5SZWQpO1xuICAgICAgICAgICAgfSAqL1xuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIGIuZHJhd092YWwoXCIzMDAsMTUwXCIsIFwiMCw3NVwiLCBLbm93bkNvbG9ycy5SZWQsIEtub3duQ29sb3JzLkJsYWNrKTtcbiAgICAgICAgICAgIGIuZHJhd0NpcmNsZSg4MCwgbnVsbCwgS25vd25Db2xvcnMuRGFya0dyZWVuKTtcblxuICAgICAgICAgICAgYi5zZXRQb2ludChcIjE2MCwxNTBcIiwgS25vd25Db2xvcnMuWWVsbG93KTtcblxuICAgICAgICAgICAgYi5kcmF3TGluZShcIjAsMTUwXCIsIFwiMzAwLDc1XCIsIEtub3duQ29sb3JzLkJsdWUpO1xuXG4gICAgICAgICAgICAvLyBiLmRyYXdSZWN0KFwiMTUwLDE1MFwiLCBcIjMweDIwXCIsIEtub3duQ29sb3JzLldoaXRlKTtcblxuICAgICAgICAgICAgLy8gdmFyIHAgPSBiLmdldFBvaW50KHsgeDogMTUwLCB5OiAxNTAgfSk7XG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIlBvaW50OiBcIiArIFtwLmEsIHAuciwgcC5nLCBwLmJdKTtcblxuICAgICAgICAgICAgYi53cml0ZVRleHQoXCJUaGlzIGlzIGEgdGVzdCEgXCIgKyAnXFx1ZjA4NycsIFwiMTAwLDEwMFwiLCB7XG4gICAgICAgICAgICAgICAgY29sb3I6IEtub3duQ29sb3JzLlllbGxvdyxcbiAgICAgICAgICAgICAgICBzaXplOiAxMCxcbiAgICAgICAgICAgICAgICBuYW1lOiAnZm9udGF3ZXNvbWUtd2ViZm9udCcsXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdmFyIGIyID0gYi5jbG9uZSgpLnJlc2l6ZShcIjIweDIwXCIpO1xuICAgICAgICAgICAgYi5pbnNlcnQoYjIsIFwiMjUsMjVcIik7XG5cbiAgICAgICAgICAgIHZpZXdNb2RlbC5zZXQoJ2ltYWdlJywgYi5yb3RhdGUoLTM3KS50b0RhdGFVcmwoKSk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyggYi5yb3RhdGUoLTM3KS50b0RhdGFVcmwoKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdFUlJPUjogJyArIGUpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgXG4gICAgY29uc29sZS5sb2coXCJCaXRtYXAgZGlzcG9zZWQhXCIpO1xuICAgIGNvbnNvbGUubG9nKFwiQml0bWFwLmlzRGlzcG9zZWQ6IFwiICsgYm1wLmlzRGlzcG9zZWQpO1xuXG4gICAgcmV0dXJuIHZpZXdNb2RlbDtcbn0iXX0=